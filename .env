# docker compose project name
COMPOSE_PROJECT_NAME=instill-model

# build from scratch or not at launch, which will build all sources from scrach. Default to false.
BUILD=false

# docker compose profiles to selectively launch components for developing the latest codebase of the specified component.
# the value can be all, api-gateway, mgmt, pipeline, connector, controller-vdp, model, controller-model, or console.
PROFILE=all

# system-wise config path (all core, vdp, and model projects must use the same path)
SYSTEM_CONFIG_PATH=~/.config/instill

# configuration directory path for docker build
BUILD_CONFIG_DIR_PATH=.

# extra parameters for helm integration test running in docker
DOCKER_HELM_IT_EXTRA_PARAMS=

# flag to enable usage collection
USAGE_ENABLED=true

# flag to enable observability stack
OBSERVE_ENABLED=false

# This flag is used for integration test in which dummy model is used instead of pulling model from GitHub, HuggingFace or ArtiVC.
# The reason is reducing the impact of network trouble during integration test
# The default value is alway false, only set when running `make integration-test`
ITMODE_ENABLED=false

# flag to enable model-backend creating predploy models
INITMODEL_ENABLED=false

# max data size in MB which pipeline and model backend accept to process
MAX_DATA_SIZE=12

# container build
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# version
UBUNTU_VERSION=20.04
ALPINE_VERSION=3.16

GOLANG_VERSION=1.21
KRAKEND_CE_VERSION=2.1.3
ARTIVC_VERSION=0.10.0
K6_VERSION=0.44.0

# Instill Core
INSTILL_CORE_VERSION=0.8.0-beta
INSTILL_CORE_HOST=localhost

# api-gateway
API_GATEWAY_HOST=api-gateway
API_GATEWAY_VERSION=0.7.0-beta
API_GATEWAY_PORT=8080

# model-backend
MODEL_BACKEND_IMAGE=instill/model-backend
MODEL_BACKEND_VERSION=0.21.0-alpha
MODEL_BACKEND_HOST=model-backend
MODEL_BACKEND_PRIVATEPORT=3083
MODEL_BACKEND_PUBLICPORT=8083

# mgmt-backend
MGMT_BACKEND_HOST=mgmt-backend
MGMT_BACKEND_VERSION=0.8.0-beta
MGMT_BACKEND_PRIVATEPORT=3084
MGMT_BACKEND_PUBLICPORT=8084

# controller-model
CONTROLLER_MODEL_IMAGE=instill/controller-model
CONTROLLER_MODEL_VERSION=0.2.8-alpha
CONTROLLER_MODEL_HOST=controller-model
CONTROLLER_MODEL_PRIVATEPORT=3086

# triton-server
TRITON_SERVER_IMAGE=instill/tritonserver
TRITON_SERVER_VERSION=23.04-vllm
TRITON_SERVER_HOST=triton-server
TRITON_SERVER_PORT=8001

# ray-server
RAY_SERVER_IMAGE=instill/ray
RAY_SERVER_VERSION=0.2.1-alpha
RAY_SERVER_HOST=ray-server
RAY_SERVER_CLIENT_PORT=10001
RAY_SERVER_DASHBOARD_PORT=8265
RAY_SERVER_GCS_PORT=6379
RAY_SERVER_SERVE_PORT=8000
RAY_SERVER_SERVE_GRPC_PORT=9000
RAY_SERVER_PROMETHEUS_PORT=8079

# triton-conda-env
TRITON_CONDA_ENV_VERSION=0.4.1-alpha

# PostgreSQL
POSTGRESQL_HOST=pg-sql
POSTGRESQL_PORT=5432

# Redis
REDIS_HOST=redis
REDIS_PORT=6379

# etcd
ETCD_HOST=etcd
ETCD_CLIENT_PORT=3379

# influxdb
INFLUXDB_HOST=influxdb
INFLUXDB_PORT=8086

# otel
OTEL_COLLECTOR_PORT=8095
OTEL_COLLECTOR_PROMETHEUS_PORT=9001

# prometheus
PROMETHEUS_HOST=prometheus
PROMETHEUS_PORT=9090

# grafana
GRAFANA_HOST=grafana
GRAFANA_PORT=3000
GRAFANA_EXPOSE_PORT=3002

# jaeger
JAEGER_HOST=jaeger
JAEGER_LISTEN_THRIFT_PORT=14268 # accept jaeger.thrift directly from clients

# Temopral
TEMPORAL_ADMIN_TOOLS_IMAGE=temporalio/admin-tools
TEMPORAL_ADMIN_TOOLS_VERSION=1.19.1
TEMPORAL_HOST=temporal
TEMPORAL_PORT=7233
