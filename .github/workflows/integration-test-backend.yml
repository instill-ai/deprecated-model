name: Integration Test Reusable (backend)

on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      target:
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  integration-test-latest-linux:
    if: inputs.target == 'latest'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Install k6
        run: |
          curl https://github.com/grafana/k6/releases/download/v${{ env.K6_VERSION }}/k6-v${{ env.K6_VERSION }}-linux-amd64.tar.gz -L | tar xvz --strip-components 1 && sudo cp k6 /usr/bin

      - name: Pre Free Disk Space (Ubuntu)
        run: |
          df --human-readable
          sudo apt clean
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true

      - name: Checkout repo (core)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/core

      - name: Load .env file (core)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Core (latest)
        run: |
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Model (latest)
        run: |
          EDITION=local-ce:test \
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          COMPOSE_PROFILES=all \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Run ${{ inputs.component }} integration test (latest)
        if: inputs.target == 'latest'
        run: |
          git clone https://github.com/instill-ai/${{ inputs.component }}.git
          cd ${{ inputs.component }}
          make integration-test API_GATEWAY_URL=localhost:${API_GATEWAY_PORT}

  integration-test-latest-mac:
    if: inputs.target == 'latest' && github.ref == 'refs/heads/main'
    runs-on: [self-hosted, macOS, model]
    timeout-minutes: 20
    steps:
      - name: remove existing docker container
        run: |
          docker rm -f $(docker ps -a -q)

      - name: Set up environment
        run: |
          brew install make

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Make down model
        run: |
          docker rm -f model-build-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f model-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose down -v

      - name: Install k6
        run: |
          brew install k6

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/core

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Make down core
        run: |
          docker rm -f core-build-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose -f docker-compose.yml -f docker-compose.observe.yml down -v
          sleep 60

      - name: Launch Instill Core (latest)
        run: |
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Model (latest)
        run: |
          EDITION=local-ce:test \
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          COMPOSE_PROFILES=all \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Run ${{ inputs.component }} integration test (latest)
        if: inputs.target == 'latest'
        run: |
          git clone https://github.com/instill-ai/${{ inputs.component }}.git
          cd ${{ inputs.component }}
          make integration-test API_GATEWAY_URL=localhost:${API_GATEWAY_PORT}    

      - name: Make down model
        run: |
          docker rm -f model-build-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f model-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose down -v

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/core

      - name: Make down core
        run: |
          docker rm -f core-build-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose -f docker-compose.yml -f docker-compose.observe.yml down -v
          sleep 60

  integration-test-release-linux:
    if: inputs.target == 'release'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Install k6
        run: |
          curl https://github.com/grafana/k6/releases/download/v${{ env.K6_VERSION }}/k6-v${{ env.K6_VERSION }}-linux-amd64.tar.gz -L | tar xvz --strip-components 1 && sudo cp k6 /usr/bin

      - name: Pre Free Disk Space (Ubuntu)
        run: |
          df --human-readable
          sudo apt clean
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true

      - name: Checkout repo (core)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/core

      - name: Load .env file (core)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Core (release)
        run: |
          EDITION=local-ce:test \
          docker compose up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Uppercase component name
        id: uppercase
        run: |
          echo "COMPONENT_NAME=$(echo ${{ inputs.component }} | tr 'a-z-' 'A-Z_')" >> $GITHUB_OUTPUT

      - name: Launch Instill Model (release)
        run: |
          EDITION=local-ce:test \
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          docker compose up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose rm -f

      - name: Run ${{ inputs.component }} integration test (release)
        env:
          COMPONENT_VERSION: ${{ env[format('{0}_VERSION', steps.uppercase.outputs.COMPONENT_NAME)] }}
        run: |
          git clone -b v$COMPONENT_VERSION https://github.com/instill-ai/${{ inputs.component }}.git
          cd ${{ inputs.component }}
          make integration-test API_GATEWAY_URL=localhost:${API_GATEWAY_PORT}

  integration-test-release-mac:
    if: inputs.target == 'release'
    runs-on: [self-hosted, macOS, model]
    timeout-minutes: 20
    steps:
      - name: Set up environment
        run: |
          brew install make

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Make down model
        run: |
          docker rm -f model-build-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f model-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose down -v

      - name: Install k6
        run: |
          brew install k6

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/core

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Make down core
        run: |
          docker rm -f core-build-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose -f docker-compose.yml -f docker-compose.observe.yml down -v
          sleep 60

      - name: Launch Instill Core (release)
        run: |
          EDITION=local-ce:test \
          docker compose up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Uppercase component name
        id: uppercase
        run: |
          echo "COMPONENT_NAME=$(echo ${{ inputs.component }} | tr 'a-z-' 'A-Z_')" >> $GITHUB_OUTPUT

      - name: Launch Instill Model (release)
        run: |
          EDITION=local-ce:test \
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          docker compose up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose rm -f

      - name: Run ${{ inputs.component }} integration test (release)
        env:
          COMPONENT_VERSION: ${{ env[format('{0}_VERSION', steps.uppercase.outputs.COMPONENT_NAME)] }}
        run: |
          git clone -b v$COMPONENT_VERSION https://github.com/instill-ai/${{ inputs.component }}.git
          cd ${{ inputs.component }}
          make integration-test API_GATEWAY_URL=localhost:${API_GATEWAY_PORT}

      - name: Make down model
        run: |
          docker rm -f model-build-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f model-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f model-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose down -v

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/core

      - name: Make down core
        run: |
          docker rm -f core-build-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-latest >/dev/null 2>&1
          docker rm -f core-backend-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-console-integration-test-helm-latest >/dev/null 2>&1
          docker rm -f core-dind-latest >/dev/null 2>&1
          EDITION=NULL docker compose -f docker-compose.yml -f docker-compose.observe.yml down -v
          sleep 60
